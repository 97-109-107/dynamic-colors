#!/bin/sh

USAGE="Usage: dynamic-colors [help|list|switch <colorscheme>]"
HELP="\
dynamic-colors <command>

Basic commands:
  h,help                  print this help message
  e,edit [<colorscheme>]  edit <colorscheme> when given or launch editor
                          in colorschemes directory otherwise
  l,list                  list available colorschemes
  s,switch <colorscheme>  change terminal colors to <colorscheme>

Creating colorschemes:
  a,audit <colorscheme>   check <colorscheme> for undefined colors
  c,create <colorscheme>  create a new colorscheme from scratch
"

die () {
	echo >&2 "$*"
	exit 1
}

change_color () {
	case $1 in
	color*)
		send_osc 4 "${1#color};$2" ;;
	foreground)
		send_osc 10 "$2" ;;
	background)
		send_osc 11 "$2" ;;
	cursor)
		send_osc 12 "$2" ;;
	mouse_foreground)
		send_osc 13 "$2" ;;
	mouse_background)
		send_osc 14 "$2" ;;
	highlight)
		send_osc 17 "$2" ;;
	esac
}

prepare_escape_sequence () {
	# we're inside a TMUX session
	[ $TMUX ] && command="${DSC}tmux;$ESC$command$ESC\\"
}

send_osc () {
	Ps=$1
	Pt=$2
	command="$OSC$Ps;$Pt$BEL"
	prepare_escape_sequence
	printf $command
}

ESC="\033"
BEL="\007"
DSC="${ESC}P"
OSC="${ESC}]"

colors=( background foreground cursor mouse_background mouse_foreground highlight color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15 )
color_names=( black red green yellow blue magenta cyan white brblack brred brgreen bryellow brblue brmagenta brcyan brwhite )

COLORSCHEMES="${COLORSCHEMES:-$HOME/.dynamic-colors/colorschemes}"

load_colorscheme () {
	[ ! -f "$COLORSCHEMES/$1.sh" ] && die "error: unknown colorscheme '$1'"
	# reset colors
	for color in ${colors[@]}; do
		unset ${!color}
	done
	# source colorscheme file
	. "$COLORSCHEMES/$1.sh"
}

switch () {
	load_colorscheme "$1"
	for color in ${colors[@]}; do
		[[ ${!color} ]] && change_color "$color" "${!color}"
	done
}

audit () {
	load_colorscheme "$1"
	declare -a problems
	for color in ${colors[@]}; do
		if [ ${!color} ]; then
			problems=( "${problems[@]}" "\033[4m$color\033[0m is not defined" )
		fi
	done
	if [ ${#problems[@]} -ne 0 ]; then
		echo >&2 "$1:"
		for p in "${problems[@]}"
		do
			echo >&2 " * $p"
		done
		exit 1
	fi
}

list () {
	[ ! -d "$COLORSCHEMES" ] && die "error: colorschemes directory '$COLORSCHEMES' doesn't exist"
	cd "$COLORSCHEMES"
	for file in *.sh; do
		echo "${file%.sh}"
	done
}

edit () {
	cd "$COLORSCHEMES"
	if [ ${#@} -eq 0 ]; then
		${EDITOR:-/usr/bin/vim} .
	else
		${EDITOR:-/usr/bin/vim} "${@/%/.sh}"
	fi
}

create () {
	[ -f "$COLORSCHEMES/$1.sh" ] && die "error: colorscheme '$1' already exists"
	output="# $1\n"
	for color in ${colors[@]}; do
		output+="\n$color=\"\""
		[[ $color == color* ]] && output+=" # ${color_names[${color#color}]}"
	done
	cd "$COLORSCHEMES"
	echo "$output" >> "$1.sh"
	edit "$1"
}

usage () {
	die "$USAGE"
}

help () {
	echo "$HELP"
}

case "$#" in
0)
	usage ;;
*)
	cmd="$1"
	shift
	case "$cmd" in
	h|help)
		help ;;
	a|audit)
		audit "$1" ;;
	c|create)
		[ $# -ne 1 ] && usage
		create "$1" ;;
	e|edit)
		edit "$@" ;;
	l|list)
		list ;;
	s|switch)
		[ $# -ne 1 ] && usage
		switch "$1" ;;
	*)
		usage ;;
	esac
esac
